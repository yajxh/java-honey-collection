/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sunny.jmh.serializertest.bean.avro;

import org.apache.avro.specific.SpecificData;
/**
 * <Description> <br>
 *
 * @author Sunny<br>
 * @version 1.0<br>
 * @taskId: <br>
 * @createDate 2018/12/05 0:30 <br>
 * @see com.sunny.jmh.serializertest.bean.avro <br>
 */
@SuppressWarnings("all")
/** this schema about Message */
@org.apache.avro.specific.AvroGenerated
public class MessageAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7888397391487816964L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MessageAvro\",\"namespace\":\"com.sunny.jmh.serializertest.bean.avro\",\"doc\":\"this schema about Message\",\"fields\":[{\"name\":\"strObj\",\"type\":\"string\"},{\"name\":\"floatObj\",\"type\":\"float\"},{\"name\":\"doubleObjList\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"boolObj\",\"type\":\"boolean\"},{\"name\":\"bytesObj\",\"type\":\"bytes\"},{\"name\":\"int32Obj\",\"type\":\"int\"},{\"name\":\"int64Obj\",\"type\":\"long\"},{\"name\":\"innerMessageObj\",\"type\":{\"type\":\"record\",\"name\":\"InnerMessageAvro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"enumTypeObj\",\"type\":{\"type\":\"enum\",\"name\":\"EnumTypeAvro\",\"symbols\":[\"UNIVERSAL\",\"WEB\",\"IMAGES\",\"LOCAL\",\"NEWS\",\"PRODUCTS\",\"VIDEO\"]}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence strObj;
  @Deprecated public float floatObj;
  @Deprecated public java.util.List<Double> doubleObjList;
  @Deprecated public boolean boolObj;
  @Deprecated public java.nio.ByteBuffer bytesObj;
  @Deprecated public int int32Obj;
  @Deprecated public long int64Obj;
  @Deprecated public com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro innerMessageObj;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MessageAvro() {}

  /**
   * All-args constructor.
   * @param strObj The new value for strObj
   * @param floatObj The new value for floatObj
   * @param doubleObjList The new value for doubleObjList
   * @param boolObj The new value for boolObj
   * @param bytesObj The new value for bytesObj
   * @param int32Obj The new value for int32Obj
   * @param int64Obj The new value for int64Obj
   * @param innerMessageObj The new value for innerMessageObj
   */
  public MessageAvro(CharSequence strObj, Float floatObj, java.util.List<Double> doubleObjList, Boolean boolObj, java.nio.ByteBuffer bytesObj, Integer int32Obj, Long int64Obj, com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro innerMessageObj) {
    this.strObj = strObj;
    this.floatObj = floatObj;
    this.doubleObjList = doubleObjList;
    this.boolObj = boolObj;
    this.bytesObj = bytesObj;
    this.int32Obj = int32Obj;
    this.int64Obj = int64Obj;
    this.innerMessageObj = innerMessageObj;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return strObj;
    case 1: return floatObj;
    case 2: return doubleObjList;
    case 3: return boolObj;
    case 4: return bytesObj;
    case 5: return int32Obj;
    case 6: return int64Obj;
    case 7: return innerMessageObj;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: strObj = (CharSequence)value$; break;
    case 1: floatObj = (Float)value$; break;
    case 2: doubleObjList = (java.util.List<Double>)value$; break;
    case 3: boolObj = (Boolean)value$; break;
    case 4: bytesObj = (java.nio.ByteBuffer)value$; break;
    case 5: int32Obj = (Integer)value$; break;
    case 6: int64Obj = (Long)value$; break;
    case 7: innerMessageObj = (com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'strObj' field.
   * @return The value of the 'strObj' field.
   */
  public CharSequence getStrObj() {
    return strObj;
  }

  /**
   * Sets the value of the 'strObj' field.
   * @param value the value to set.
   */
  public void setStrObj(CharSequence value) {
    this.strObj = value;
  }

  /**
   * Gets the value of the 'floatObj' field.
   * @return The value of the 'floatObj' field.
   */
  public Float getFloatObj() {
    return floatObj;
  }

  /**
   * Sets the value of the 'floatObj' field.
   * @param value the value to set.
   */
  public void setFloatObj(Float value) {
    this.floatObj = value;
  }

  /**
   * Gets the value of the 'doubleObjList' field.
   * @return The value of the 'doubleObjList' field.
   */
  public java.util.List<Double> getDoubleObjList() {
    return doubleObjList;
  }

  /**
   * Sets the value of the 'doubleObjList' field.
   * @param value the value to set.
   */
  public void setDoubleObjList(java.util.List<Double> value) {
    this.doubleObjList = value;
  }

  /**
   * Gets the value of the 'boolObj' field.
   * @return The value of the 'boolObj' field.
   */
  public Boolean getBoolObj() {
    return boolObj;
  }

  /**
   * Sets the value of the 'boolObj' field.
   * @param value the value to set.
   */
  public void setBoolObj(Boolean value) {
    this.boolObj = value;
  }

  /**
   * Gets the value of the 'bytesObj' field.
   * @return The value of the 'bytesObj' field.
   */
  public java.nio.ByteBuffer getBytesObj() {
    return bytesObj;
  }

  /**
   * Sets the value of the 'bytesObj' field.
   * @param value the value to set.
   */
  public void setBytesObj(java.nio.ByteBuffer value) {
    this.bytesObj = value;
  }

  /**
   * Gets the value of the 'int32Obj' field.
   * @return The value of the 'int32Obj' field.
   */
  public Integer getInt32Obj() {
    return int32Obj;
  }

  /**
   * Sets the value of the 'int32Obj' field.
   * @param value the value to set.
   */
  public void setInt32Obj(Integer value) {
    this.int32Obj = value;
  }

  /**
   * Gets the value of the 'int64Obj' field.
   * @return The value of the 'int64Obj' field.
   */
  public Long getInt64Obj() {
    return int64Obj;
  }

  /**
   * Sets the value of the 'int64Obj' field.
   * @param value the value to set.
   */
  public void setInt64Obj(Long value) {
    this.int64Obj = value;
  }

  /**
   * Gets the value of the 'innerMessageObj' field.
   * @return The value of the 'innerMessageObj' field.
   */
  public com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro getInnerMessageObj() {
    return innerMessageObj;
  }

  /**
   * Sets the value of the 'innerMessageObj' field.
   * @param value the value to set.
   */
  public void setInnerMessageObj(com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro value) {
    this.innerMessageObj = value;
  }

  /**
   * Creates a new MessageAvro RecordBuilder.
   * @return A new MessageAvro RecordBuilder
   */
  public static com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder newBuilder() {
    return new com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder();
  }

  /**
   * Creates a new MessageAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MessageAvro RecordBuilder
   */
  public static com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder newBuilder(com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder other) {
    return new com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder(other);
  }

  /**
   * Creates a new MessageAvro RecordBuilder by copying an existing MessageAvro instance.
   * @param other The existing instance to copy.
   * @return A new MessageAvro RecordBuilder
   */
  public static com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder newBuilder(com.sunny.jmh.serializertest.bean.avro.MessageAvro other) {
    return new com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder(other);
  }

  /**
   * RecordBuilder for MessageAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MessageAvro>
    implements org.apache.avro.data.RecordBuilder<MessageAvro> {

    private CharSequence strObj;
    private float floatObj;
    private java.util.List<Double> doubleObjList;
    private boolean boolObj;
    private java.nio.ByteBuffer bytesObj;
    private int int32Obj;
    private long int64Obj;
    private com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro innerMessageObj;
    private com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro.Builder innerMessageObjBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.strObj)) {
        this.strObj = data().deepCopy(fields()[0].schema(), other.strObj);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.floatObj)) {
        this.floatObj = data().deepCopy(fields()[1].schema(), other.floatObj);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.doubleObjList)) {
        this.doubleObjList = data().deepCopy(fields()[2].schema(), other.doubleObjList);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.boolObj)) {
        this.boolObj = data().deepCopy(fields()[3].schema(), other.boolObj);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.bytesObj)) {
        this.bytesObj = data().deepCopy(fields()[4].schema(), other.bytesObj);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.int32Obj)) {
        this.int32Obj = data().deepCopy(fields()[5].schema(), other.int32Obj);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.int64Obj)) {
        this.int64Obj = data().deepCopy(fields()[6].schema(), other.int64Obj);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.innerMessageObj)) {
        this.innerMessageObj = data().deepCopy(fields()[7].schema(), other.innerMessageObj);
        fieldSetFlags()[7] = true;
      }
      if (other.hasInnerMessageObjBuilder()) {
        this.innerMessageObjBuilder = com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro.newBuilder(other.getInnerMessageObjBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MessageAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.sunny.jmh.serializertest.bean.avro.MessageAvro other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.strObj)) {
        this.strObj = data().deepCopy(fields()[0].schema(), other.strObj);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.floatObj)) {
        this.floatObj = data().deepCopy(fields()[1].schema(), other.floatObj);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.doubleObjList)) {
        this.doubleObjList = data().deepCopy(fields()[2].schema(), other.doubleObjList);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.boolObj)) {
        this.boolObj = data().deepCopy(fields()[3].schema(), other.boolObj);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.bytesObj)) {
        this.bytesObj = data().deepCopy(fields()[4].schema(), other.bytesObj);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.int32Obj)) {
        this.int32Obj = data().deepCopy(fields()[5].schema(), other.int32Obj);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.int64Obj)) {
        this.int64Obj = data().deepCopy(fields()[6].schema(), other.int64Obj);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.innerMessageObj)) {
        this.innerMessageObj = data().deepCopy(fields()[7].schema(), other.innerMessageObj);
        fieldSetFlags()[7] = true;
      }
      this.innerMessageObjBuilder = null;
    }

    /**
      * Gets the value of the 'strObj' field.
      * @return The value.
      */
    public CharSequence getStrObj() {
      return strObj;
    }

    /**
      * Sets the value of the 'strObj' field.
      * @param value The value of 'strObj'.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setStrObj(CharSequence value) {
      validate(fields()[0], value);
      this.strObj = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'strObj' field has been set.
      * @return True if the 'strObj' field has been set, false otherwise.
      */
    public boolean hasStrObj() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'strObj' field.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder clearStrObj() {
      strObj = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'floatObj' field.
      * @return The value.
      */
    public Float getFloatObj() {
      return floatObj;
    }

    /**
      * Sets the value of the 'floatObj' field.
      * @param value The value of 'floatObj'.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setFloatObj(float value) {
      validate(fields()[1], value);
      this.floatObj = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'floatObj' field has been set.
      * @return True if the 'floatObj' field has been set, false otherwise.
      */
    public boolean hasFloatObj() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'floatObj' field.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder clearFloatObj() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'doubleObjList' field.
      * @return The value.
      */
    public java.util.List<Double> getDoubleObjList() {
      return doubleObjList;
    }

    /**
      * Sets the value of the 'doubleObjList' field.
      * @param value The value of 'doubleObjList'.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setDoubleObjList(java.util.List<Double> value) {
      validate(fields()[2], value);
      this.doubleObjList = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'doubleObjList' field has been set.
      * @return True if the 'doubleObjList' field has been set, false otherwise.
      */
    public boolean hasDoubleObjList() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'doubleObjList' field.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder clearDoubleObjList() {
      doubleObjList = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'boolObj' field.
      * @return The value.
      */
    public Boolean getBoolObj() {
      return boolObj;
    }

    /**
      * Sets the value of the 'boolObj' field.
      * @param value The value of 'boolObj'.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setBoolObj(boolean value) {
      validate(fields()[3], value);
      this.boolObj = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'boolObj' field has been set.
      * @return True if the 'boolObj' field has been set, false otherwise.
      */
    public boolean hasBoolObj() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'boolObj' field.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder clearBoolObj() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'bytesObj' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getBytesObj() {
      return bytesObj;
    }

    /**
      * Sets the value of the 'bytesObj' field.
      * @param value The value of 'bytesObj'.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setBytesObj(java.nio.ByteBuffer value) {
      validate(fields()[4], value);
      this.bytesObj = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'bytesObj' field has been set.
      * @return True if the 'bytesObj' field has been set, false otherwise.
      */
    public boolean hasBytesObj() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'bytesObj' field.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder clearBytesObj() {
      bytesObj = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'int32Obj' field.
      * @return The value.
      */
    public Integer getInt32Obj() {
      return int32Obj;
    }

    /**
      * Sets the value of the 'int32Obj' field.
      * @param value The value of 'int32Obj'.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setInt32Obj(int value) {
      validate(fields()[5], value);
      this.int32Obj = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'int32Obj' field has been set.
      * @return True if the 'int32Obj' field has been set, false otherwise.
      */
    public boolean hasInt32Obj() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'int32Obj' field.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder clearInt32Obj() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'int64Obj' field.
      * @return The value.
      */
    public Long getInt64Obj() {
      return int64Obj;
    }

    /**
      * Sets the value of the 'int64Obj' field.
      * @param value The value of 'int64Obj'.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setInt64Obj(long value) {
      validate(fields()[6], value);
      this.int64Obj = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'int64Obj' field has been set.
      * @return True if the 'int64Obj' field has been set, false otherwise.
      */
    public boolean hasInt64Obj() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'int64Obj' field.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder clearInt64Obj() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'innerMessageObj' field.
      * @return The value.
      */
    public com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro getInnerMessageObj() {
      return innerMessageObj;
    }

    /**
      * Sets the value of the 'innerMessageObj' field.
      * @param value The value of 'innerMessageObj'.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setInnerMessageObj(com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro value) {
      validate(fields()[7], value);
      this.innerMessageObjBuilder = null;
      this.innerMessageObj = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'innerMessageObj' field has been set.
      * @return True if the 'innerMessageObj' field has been set, false otherwise.
      */
    public boolean hasInnerMessageObj() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'innerMessageObj' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro.Builder getInnerMessageObjBuilder() {
      if (innerMessageObjBuilder == null) {
        if (hasInnerMessageObj()) {
          setInnerMessageObjBuilder(com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro.newBuilder(innerMessageObj));
        } else {
          setInnerMessageObjBuilder(com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro.newBuilder());
        }
      }
      return innerMessageObjBuilder;
    }

    /**
     * Sets the Builder instance for the 'innerMessageObj' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder setInnerMessageObjBuilder(com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro.Builder value) {
      clearInnerMessageObj();
      innerMessageObjBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'innerMessageObj' field has an active Builder instance
     * @return True if the 'innerMessageObj' field has an active Builder instance
     */
    public boolean hasInnerMessageObjBuilder() {
      return innerMessageObjBuilder != null;
    }

    /**
      * Clears the value of the 'innerMessageObj' field.
      * @return This builder.
      */
    public com.sunny.jmh.serializertest.bean.avro.MessageAvro.Builder clearInnerMessageObj() {
      innerMessageObj = null;
      innerMessageObjBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public MessageAvro build() {
      try {
        MessageAvro record = new MessageAvro();
        record.strObj = fieldSetFlags()[0] ? this.strObj : (CharSequence) defaultValue(fields()[0]);
        record.floatObj = fieldSetFlags()[1] ? this.floatObj : (Float) defaultValue(fields()[1]);
        record.doubleObjList = fieldSetFlags()[2] ? this.doubleObjList : (java.util.List<Double>) defaultValue(fields()[2]);
        record.boolObj = fieldSetFlags()[3] ? this.boolObj : (Boolean) defaultValue(fields()[3]);
        record.bytesObj = fieldSetFlags()[4] ? this.bytesObj : (java.nio.ByteBuffer) defaultValue(fields()[4]);
        record.int32Obj = fieldSetFlags()[5] ? this.int32Obj : (Integer) defaultValue(fields()[5]);
        record.int64Obj = fieldSetFlags()[6] ? this.int64Obj : (Long) defaultValue(fields()[6]);
        if (innerMessageObjBuilder != null) {
          record.innerMessageObj = this.innerMessageObjBuilder.build();
        } else {
          record.innerMessageObj = fieldSetFlags()[7] ? this.innerMessageObj : (com.sunny.jmh.serializertest.bean.avro.InnerMessageAvro) defaultValue(fields()[7]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
